[{"D:\\React.js\\socialOnReact\\social\\src\\index.js":"1","D:\\React.js\\socialOnReact\\social\\src\\App.js":"2","D:\\React.js\\socialOnReact\\social\\src\\reportWebVitals.js":"3","D:\\React.js\\socialOnReact\\social\\src\\components\\Menu\\Menu.jsx":"4","D:\\React.js\\socialOnReact\\social\\src\\components\\Header\\Header.jsx":"5","D:\\React.js\\socialOnReact\\social\\src\\components\\Profile\\Profile.jsx":"6","D:\\React.js\\socialOnReact\\social\\src\\components\\Profile\\UserPost\\MyPost.jsx":"7","D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\Chats.jsx":"8","D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\Dialogs\\Dialogs.jsx":"9","D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\BlockDialog\\BlockDialog.jsx":"10","D:\\React.js\\socialOnReact\\social\\src\\Redux\\state.js":"11","D:\\React.js\\socialOnReact\\social\\src\\Redux\\profileReducer.js":"12","D:\\React.js\\socialOnReact\\social\\src\\Redux\\dialogsReducer.js":"13","D:\\React.js\\socialOnReact\\social\\src\\Redux\\redux_store.js":"14","D:\\React.js\\socialOnReact\\social\\src\\components\\Profile\\ProfileContainer.jsx":"15","D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\ChatContainer.jsx":"16","D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\Peopls.jsx":"17","D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\PeoplsContainer.jsx":"18","D:\\React.js\\socialOnReact\\social\\src\\Redux\\peoplsRebucer.js":"19","D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\BlockPiople\\BlockPeopleContainer.jsx":"20","D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\BlockPiople\\BlockPiople.jsx":"21"},{"size":532,"mtime":1612765816260,"results":"22","hashOfConfig":"23"},{"size":770,"mtime":1614778406706,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":1529,"mtime":1611568729639,"results":"26","hashOfConfig":"23"},{"size":513,"mtime":1609303995143,"results":"27","hashOfConfig":"23"},{"size":3160,"mtime":1611566358569,"results":"28","hashOfConfig":"23"},{"size":607,"mtime":1610956704129,"results":"29","hashOfConfig":"23"},{"size":2272,"mtime":1611566396092,"results":"30","hashOfConfig":"23"},{"size":572,"mtime":1610546746396,"results":"31","hashOfConfig":"23"},{"size":595,"mtime":1610550351221,"results":"32","hashOfConfig":"23"},{"size":3510,"mtime":1611067483987,"results":"33","hashOfConfig":"23"},{"size":1136,"mtime":1611560447022,"results":"34","hashOfConfig":"23"},{"size":1558,"mtime":1614779657719,"results":"35","hashOfConfig":"23"},{"size":403,"mtime":1612252163634,"results":"36","hashOfConfig":"23"},{"size":598,"mtime":1612241340022,"results":"37","hashOfConfig":"23"},{"size":1335,"mtime":1611292899630,"results":"38","hashOfConfig":"23"},{"size":223,"mtime":1615361517117,"results":"39","hashOfConfig":"23"},{"size":367,"mtime":1612253377221,"results":"40","hashOfConfig":"23"},{"size":1830,"mtime":1615365190219,"results":"41","hashOfConfig":"23"},{"size":1099,"mtime":1615364553741,"results":"42","hashOfConfig":"23"},{"size":4343,"mtime":1615365197014,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1qgc9d5",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},"D:\\React.js\\socialOnReact\\social\\src\\index.js",[],["97","98"],"D:\\React.js\\socialOnReact\\social\\src\\App.js",[],"D:\\React.js\\socialOnReact\\social\\src\\reportWebVitals.js",[],"D:\\React.js\\socialOnReact\\social\\src\\components\\Menu\\Menu.jsx",[],"D:\\React.js\\socialOnReact\\social\\src\\components\\Header\\Header.jsx",["99"],"import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n    <section className=\"header\">\r\n        <div className=\"container\">\r\n          <div className=\"headerContent\">\r\n            <a className=\"logo\">\r\n              <img src=\"img/logo.png\" alt=\"logo\" />\r\n            </a>\r\n\r\n            <div className=\"exit\">\r\n              <button className=\"btn\">Выход</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n}\r\nexport default Header;","D:\\React.js\\socialOnReact\\social\\src\\components\\Profile\\Profile.jsx",["100","101"],"import React from \"react\";\r\nimport MyPost from \"./UserPost/MyPost.jsx\";\r\nimport \"./profile.css\";\r\nimport { AddPostActionCreater } from \"../../Redux/profileReducer.js\";\r\n\r\nconst Profile = (props) => {\r\n  // переменные\r\n  let newPostElement = React.createRef();\r\n  // функции\r\n  let myPost = props.myPosts.map((post) => (\r\n    <MyPost\r\n      name={post.name}\r\n      key={post.id}\r\n      textPost={post.text}\r\n      idPost={post.id}\r\n      postData={post.postData}\r\n    />\r\n  ));\r\n\r\n  let addMyPost = () => {\r\n    let today = new Date();\r\n    let date =\r\n      today.getFullYear() +\r\n      \".\" +\r\n      String(today.getMonth() + 1).padStart(2, \"0\") +\r\n      \".\" +\r\n      String(today.getDate()).padStart(2, \"0\") +\r\n      \" \" +\r\n      String(today.getHours()).padStart(2, \"0\") +\r\n      \":\" +\r\n      String(today.getMinutes()).padStart(2, \"0\");\r\n\r\n    let newPostJson = {\r\n      id: 4,\r\n      idUser: props.dataProfile.id,\r\n      name: props.dataProfile.name,\r\n      text: newPostElement.current.value,\r\n      postData: date,\r\n    };\r\n    props.addMyPost(newPostJson);\r\n    newPostElement.current.value = \"\";\r\n  };\r\n\r\n  // рендер\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"profile\">\r\n        <div className=\"avatar\">\r\n          <div className=\"photo\">\r\n            <img src={props.dataProfile.img} alt=\"photo\" />\r\n          </div>\r\n          <div className=\"avatarBtn\">\r\n            <button className=\"noBtn editPhoto\">изменить фото</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"infoBlock\">\r\n          <div className=\"info\">\r\n            <div className=\"fio\">\r\n              <h2>{props.dataProfile.name}</h2>\r\n            </div>\r\n            <div className=\"decorLine\"></div>\r\n\r\n            <div className=\"row between\">\r\n              <div className=\"dateOfBirth row center\">\r\n                <h2>\r\n                  <span className=\"titleInfoLine\">Дата рождения:</span>{\" \"}\r\n                  {props.dataProfile.dateBirth}\r\n                </h2>\r\n              </div>\r\n              <div className=\"city row center\">\r\n                <h2>\r\n                  <span className=\"titleInfoLine\">Город: </span>{\" \"}\r\n                  {props.dataProfile.city}\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"decorLine\"></div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"dateOfBirth row center\">\r\n                <h2>\r\n                  <span className=\"titleInfoLine\">О себе:</span>\r\n                  {props.dataProfile.description}\r\n                </h2>\r\n              </div>\r\n            </div>\r\n            <div className=\"decorLine\"></div>\r\n          </div>\r\n\r\n          <div className=\"writePost\">\r\n            <textarea\r\n              className=\"writePostInput\"\r\n              ref={newPostElement}\r\n            ></textarea>\r\n            <button className=\"noBtn\" onClick={addMyPost}>\r\n              Отправить\r\n            </button>\r\n          </div>\r\n          <div className=\"myPosts\">{myPost}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","D:\\React.js\\socialOnReact\\social\\src\\components\\Profile\\UserPost\\MyPost.jsx",["102"],"import React from \"react\";\r\nimport \"./myPost.css\";\r\n\r\nconst MyPost = (props) => {\r\n  return (\r\n    <div className=\"blockPost row\" id={\"myPost\" + props.idPost}>\r\n      <div className=\"imgUserPost\">\r\n        <img\r\n          src=\"https://i.playground.ru/p/MdE1jjqrmXkxDlkYZ7D4bg.jpeg\"\r\n          alt=\"photo\"\r\n        />\r\n      </div>\r\n      <div className=\"infoUserPost column between\">\r\n        <h4 className=\"postName\">{props.name}</h4>\r\n        <h3 className=\"postText\">{props.textPost}</h3>\r\n        <p className=\"dataPost\">{props.postData}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MyPost;\r\n","D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\Chats.jsx",["103"],"import React from \"react\";\r\nimport Dialogs from \"./Dialogs/Dialogs.jsx\";\r\nimport BlockDialog from \"./BlockDialog/BlockDialog.jsx\";\r\nimport \"./chats.css\";\r\nimport { addMassageActionCreater } from \"./../../Redux/dialogsReducer.js\";\r\n\r\nconst Chats = (props) => {\r\n  // переменные\r\n  let newMassageElement = React.createRef();\r\n\r\n  // функции\r\n  let listDialogs = props.dataListDialogs.map((d) => (\r\n    <Dialogs\r\n      id={d.id}\r\n      key={d.id}\r\n      img={d.img}\r\n      name={d.name}\r\n      textData={d.textData}\r\n      rider={d.rider}\r\n    />\r\n  ));\r\n\r\n  let Dialog = props.dataDialog.map((d) => (\r\n    <BlockDialog\r\n      id={d.id}\r\n      key={d.id}\r\n      myId={props.myId}\r\n      img={d.img}\r\n      name={d.name}\r\n      textData={d.textData}\r\n      text={d.text}\r\n    />\r\n  ));\r\n\r\n  let addMassage = () => {\r\n    let today = new Date();\r\n    let date =\r\n      today.getFullYear() +\r\n      \".\" +\r\n      String(today.getMonth() + 1).padStart(2, \"0\") +\r\n      \".\" +\r\n      String(today.getDate()).padStart(2, \"0\") +\r\n      \" \" +\r\n      String(today.getHours()).padStart(2, \"0\") +\r\n      \":\" +\r\n      String(today.getMinutes()).padStart(2, \"0\");\r\n\r\n    let newMassageJson = {\r\n      id: props.myId,\r\n      img: \"https://i.playground.ru/p/MdE1jjqrmXkxDlkYZ7D4bg.jpeg\",\r\n      name: \"Емельянов Алексей Алексеевич\",\r\n      textData: date,\r\n      text: newMassageElement.current.value,\r\n    };\r\n    props.addMassage(newMassageJson);\r\n    newMassageElement.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <div className=\"fullDialogs\">\r\n        <div className=\"listDialogs\">\r\n          <div className=\"searchDialogBlock\">\r\n            <input className=\"searchDialog\" type=\"text\" />\r\n            <button> поиск </button>\r\n          </div>\r\n          {listDialogs}\r\n        </div>\r\n\r\n        <div className=\"dialog\">\r\n          <div className=\"allDialog\">{Dialog}</div>\r\n          <div className=\"sendDialog\">\r\n            <textarea\r\n              className=\"writeSmsChat\"\r\n              ref={newMassageElement}\r\n            ></textarea>\r\n            <button onClick={addMassage}>Отправить</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Chats;\r\n","D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\Dialogs\\Dialogs.jsx",["104"],"import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./dialogs.css\";\r\n\r\nconst Dialogs = (props) => {\r\n  let ico = \"\";\r\n  if (props.rider > 0) {\r\n    ico = <p className=\"noRiderChat\">{props.rider}</p>;\r\n  }\r\n  return (\r\n    <NavLink to={\"chats#\" + props.id} className=\"blockLine\">\r\n      <img src={props.img} alt=\"photo\" />\r\n      <div className=\"blockLineText\">\r\n        <p className=\"fio\">{props.name}</p>\r\n        <p className=\"dateDialog\">{props.textData}</p>\r\n      </div>\r\n      {ico}\r\n    </NavLink>\r\n  );\r\n};\r\nexport default Dialogs;\r\n","D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\BlockDialog\\BlockDialog.jsx",["105"],"import React from \"react\";\r\n\r\nimport \"./blockDialog.css\";\r\n\r\nconst BlockDialog = (props) => {\r\n  let calssNameMyDialog = \"\";\r\n  if (props.id == props.myId) {\r\n    calssNameMyDialog = \"myDialog\";\r\n  }\r\n\r\n  return (\r\n    <div className={\"blockDialog \" + calssNameMyDialog}>\r\n      <div className=\"photo\">\r\n        <img src={props.img} alt=\"\" />\r\n      </div>\r\n      <div className=\"info\">\r\n        <p className=\"name\">{props.name}</p>\r\n        <p className=\"text\">{props.text}</p>\r\n        <p className=\"data\">{props.textData}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default BlockDialog;\r\n","D:\\React.js\\socialOnReact\\social\\src\\Redux\\state.js",[],["106","107"],"D:\\React.js\\socialOnReact\\social\\src\\Redux\\profileReducer.js",[],"D:\\React.js\\socialOnReact\\social\\src\\Redux\\dialogsReducer.js",[],"D:\\React.js\\socialOnReact\\social\\src\\Redux\\redux_store.js",[],"D:\\React.js\\socialOnReact\\social\\src\\components\\Profile\\ProfileContainer.jsx",[],"D:\\React.js\\socialOnReact\\social\\src\\components\\Chats\\ChatContainer.jsx",["108"],"import React from \"react\";\r\nimport Chats from \"./Chats.jsx\";\r\nimport { connect } from \"react-redux\";\r\nimport { addMassageActionCreater } from \"./../../Redux/dialogsReducer.js\";\r\n\r\n// const ChatsContainer = (props) => {\r\n//   return (\r\n//     <StoreContext.Consumer>\r\n//       {(store) => {\r\n//         let state = store.getState();\r\n\r\n//         let addMassage = (newMassageJson) => {\r\n//           store.dispatch(addMassageActionCreater(newMassageJson));\r\n//         };\r\n\r\n//         return (\r\n//           <Chats\r\n//             addMassage={addMassage}\r\n//             dataListDialogs={state.DialogsPage.dataListDialogs}\r\n//             dataDialog={state.DialogsPage.dataDialog}\r\n//             myId={state.ProfilePage.dataProfile.id}\r\n//           />\r\n//         );\r\n//       }}\r\n//     </StoreContext.Consumer>\r\n//   );\r\n// };\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dataListDialogs: state.DialogsPage.dataListDialogs,\r\n    dataDialog: state.DialogsPage.dataDialog,\r\n    myId: state.ProfilePage.dataProfile.id,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMassage: (newMassageJson) => {\r\n      dispatch(addMassageActionCreater(newMassageJson));\r\n    },\r\n  };\r\n};\r\n\r\nconst SuperChatsContainer = connect(mapStateToProps, mapDispatchToProps)(Chats);\r\n\r\nexport default SuperChatsContainer;\r\n","D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\Peopls.jsx",[],"D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\PeoplsContainer.jsx",[],["109","110"],"D:\\React.js\\socialOnReact\\social\\src\\Redux\\peoplsRebucer.js",[],"D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\BlockPiople\\BlockPeopleContainer.jsx",[],"D:\\React.js\\socialOnReact\\social\\src\\components\\Peopls\\BlockPiople\\BlockPiople.jsx",["111"],"import React from \"react\";\r\nimport \"./blockPiople.css\";\r\nimport * as axios from \"axios\";\r\n\r\nclass BlockPiople extends React.Component {\r\n  componentDidMount() {\r\n    this.getUser(this.props.currentPage);\r\n  }\r\n\r\n  onPageChange = (currentPage) => {\r\n    this.props.setCurranrPage(currentPage);\r\n    this.getUser(currentPage);\r\n  };\r\n\r\n  getUser = (currentPage) => {\r\n    axios\r\n      .get(\r\n        `https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${this.props.pageSize}`\r\n      )\r\n      .then((response) => {\r\n        this.props.setUsers(response.data.items);\r\n        //this.props.setTotalUserCount(response.data.totalCount);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    let pagesCount = this.props.totalUserCount / this.props.pageSize;\r\n\r\n    let pages = [];\r\n    for (let i = 0; i < Math.ceil(pagesCount); i++) {\r\n      pages.push(i + 1);\r\n    }\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"peopls\">\r\n          <div className=\"filter\">\r\n            <div className=\"row\">\r\n              <input type=\"text\" placeholder=\"поиск\" />\r\n              <button className=\"noBtn\">поиск</button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"list-peopls\">\r\n            <div className=\"carusel row center\">\r\n              {pages.map((p) => {\r\n                return (\r\n                  <sapn\r\n                    className={\r\n                      this.props.currentPage === p\r\n                        ? \"cur activePageCount\"\r\n                        : \"cur\"\r\n                    }\r\n                    onClick={(e) => {\r\n                      this.onPageChange(p);\r\n                    }}\r\n                  >\r\n                    {p}\r\n                  </sapn>\r\n                );\r\n              })}\r\n            </div>\r\n            {this.props.users.map((u) => (\r\n              <div className=\"block\" key={u.id} id={u.id}>\r\n                <div className=\"photo\">\r\n                  <img\r\n                    src={\r\n                      u.photos.small != null\r\n                        ? u.photos.small\r\n                        : \"img/image/photo.jpg\"\r\n                    }\r\n                    alt=\"photo\"\r\n                  />\r\n                </div>\r\n                <div className=\"info\">\r\n                  <div className=\"text\">\r\n                    <h3 className=\"name\">{u.name}</h3>\r\n                    {/* <h4 className=\"year\">{u.status}</h4> */}\r\n                  </div>\r\n                  {/* <div className=\"dopInfo {if (isInfoShown) dopInfohide}\">\r\n              <h4>город: {u.city}</h4>\r\n              <h4>дата рождения: {u.dateBirth}</h4>\r\n            </div> */}\r\n                  <div className=\"btns\">\r\n                    {!u.followed ? (\r\n                      <button\r\n                        onClick={() => {\r\n                          this.props.follow(u.id);\r\n                        }}\r\n                        className=\"noBtn\"\r\n                      >\r\n                        добавить в друзья\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        onClick={() => {\r\n                          this.props.unFollow(u.id);\r\n                        }}\r\n                        className=\"noBtn\"\r\n                      >\r\n                        удалить из друзей\r\n                      </button>\r\n                    )}\r\n                    <button className=\"noBtn\">подробнее</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlockPiople;\r\n\r\n// function yearUser(data) {\r\n//   let today = new Date();\r\n//   let dateBirth = data.split(\".\");\r\n//   if (\r\n//     today.getMonth() + 1 == parseInt(dateBirth[1]) &&\r\n//     today.getMonth() + 1 < parseInt(dateBirth[0])\r\n//   ) {\r\n//     return parseInt(today.getFullYear()) - parseInt(dateBirth[2]) - 1;\r\n//   } else if (today.getMonth() + 1 < parseInt(dateBirth[1])) {\r\n//     return parseInt(today.getFullYear()) - parseInt(dateBirth[2]) - 1;\r\n//   } else {\r\n//     return parseInt(today.getFullYear()) - parseInt(dateBirth[2]);\r\n//   }\r\n// }\r\n\r\n// let only = \"\";\r\n// if (props.peopls.only) {\r\n//   only = <div className=\"icoOnly\"></div>;\r\n// }\r\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":9,"column":13,"nodeType":"118","endLine":9,"endColumn":33},{"ruleId":"119","severity":1,"message":"120","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":50,"column":13,"nodeType":"118","endLine":50,"endColumn":60},{"ruleId":"123","severity":1,"message":"124","line":8,"column":9,"nodeType":"118","endLine":11,"endColumn":11},{"ruleId":"119","severity":1,"message":"125","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":13,"column":7,"nodeType":"118","endLine":13,"endColumn":42},{"ruleId":"126","severity":1,"message":"127","line":7,"column":16,"nodeType":"128","messageId":"129","endLine":7,"endColumn":18},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","replacedBy":"131"},{"ruleId":"119","severity":1,"message":"132","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":13},{"ruleId":"112","replacedBy":"133"},{"ruleId":"114","replacedBy":"134"},{"ruleId":"123","severity":1,"message":"124","line":66,"column":19,"nodeType":"118","endLine":73,"endColumn":21},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'AddPostActionCreater' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'addMassageActionCreater' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["135"],["136"],"'React' is defined but never used.",["135"],["136"],"no-global-assign","no-unsafe-negation"]